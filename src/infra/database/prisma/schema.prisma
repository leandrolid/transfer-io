// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../../../../src/app/generated/prisma"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid(7)) @db.Uuid
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  account Account?

  @@map("users")
}

model Account {
  id        String   @id @default(uuid(7)) @db.Uuid
  balance   Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userId String @unique @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  transactions Transaction[]

  @@map("accounts")
}

enum TransactionType {
  CREDIT
  DEBIT
}

enum TransactionStatus {
  COMPLETED
  CANCELLED
}

model Transaction {
  id        String            @id @default(uuid(7)) @db.Uuid
  amount    Int
  type      TransactionType
  status    TransactionStatus @default(COMPLETED)
  createdAt DateTime          @default(now()) @map("created_at")
  updatedAt DateTime          @updatedAt @map("updated_at")

  accountId String  @map("account_id") @db.Uuid
  account   Account @relation(fields: [accountId], references: [id])

  referenceId String? @unique @map("reference_id") @db.Uuid

  @@map("transactions")
}
